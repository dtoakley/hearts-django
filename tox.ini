###############################################################################
# Tox is a tool for running tests in multiple environments. You supply
# configuration and it handles creating the virtual environments, installing
# dependencies, and executing commands.
#
# For more details, check out https://tox.readthedocs.io/
###############################################################################
[tox]
skipsdist = True
envlist =
  flake8
  isort
  scan-deps
  py36

[testenv:py36]
install_command = pip install --process-dependency-links {opts} {packages}
commands = python manage.py test
deps =
  -rrequirements.txt
setenv =
  DJANGO_SETTINGS_MODULE = hearts.settings.dev
  HEARTS_ENV_CONFIG_FILE = {toxinidir}/env_config.ini
  PYTHONPATH = {toxinidir}/hearts
skip_install = True

[testenv:flake8]
basepython = python3.6
commands = flake8 hearts
deps =
    flake8
    flake8-per-file-ignores
skip_install = True

[testenv:isort]
basepython = python3.6
commands = isort --recursive --check-only --diff hearts
deps = isort
skip_install = True

[testenv:scan-deps]
basepython = python3.6
commands = safety check -r {toxinidir}/requirements.txt {posargs:--full-report}
deps = safety
skip_install = True
setenv =
    LANG_ALL = en_US.utf-8
    LANG = en_US.utf-8
    SAFETY_API_KEY = {env:bamboo_SAFETY_API_KEY:}


###############################################################################
# Configuration for various code quality tools. We put these in the tox.ini
# rather than have multiple config files like .coveragerc, pytest.ini, etc.
#
# Consult each tool's documentation for configuration options.
###############################################################################
[pytest]
addopts = -v --cov=hearts --cov-report=html --cov-report=term-missing --cov-config=tox.ini --junitxml=junit.xml
python_files = tests.py test_*.py *_tests.py
testpaths = hearts

[flake8]
exclude = locale,__pycache__,.pyc,templates
max-complexity = 10
max-line-length = 120
per-file-ignores =
    settings/dev.py: F403,F405

[coverage:run]
branch = True
include = hearts/*
omit = *tests*, *apps.py, *migrations*, *settings*, *test*, *wsgi*, *urls.py, *health_checks*, *admin.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __str__
    raise NotImplementedError
omit = hearts/__init__.py,hearts/tests/*

[isort]
default_section = THIRDPARTY
known_django = django
known_first_party = api,hearts_core
line_length = 120
sections = FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
